<nav class="sticky top-0 left-0 right-0 z-50 w-full backdrop-blur">
  <div id="squishyNav" class="max-w-[1350px] mx-auto flex items-center justify-between px-4 sm:pl-[clamp(0px,8vw,108px)] sm:pr-[clamp(0px,8vw,108px)] font-open h-16 sm:h-20 lg:h-28 transition-all duration-300">
    <div id="logoBreadcrumb" class="text-xs sm:text-base lg:text-xl font-bold truncate max-w-[60%] sm:max-w-none"></div>

    <div class="flex sm:hidden items-center space-x-3 xs:space-x-4 sm:space-x-3 text-xs font-extrabold">
      <a href="/#summary" data-target="summary" class="nav-link hover:text-gray-300 transition-colors duration-1000 px-1 xs:px-8.5 py-1 min-h-[44px] flex items-center">SUMMARY</a>
      <a href="/#projects" data-target="projects" class="nav-link hover:text-gray-300 transition-colors duration-1000 px-1 xs:px-8.5 py-1 min-h-[44px] flex items-center">PROJECTS</a>
      <div class="relative group flex items-center">
        <div class="flex items-center cursor-pointer hover:text-gray-300 space-x-0.5 xs:space-x-1 py-1 min-h-[44px]">
          <span class="text-xs">DE</span>
          <svg class="w-3 h-2 rounded overflow-hidden" style="filter: drop-shadow(0 0 1px rgba(255,255,255,0.2));" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 55.2 38.4">
            <g fill-rule="evenodd" clip-rule="evenodd">
              <path d="M3.03 0h49.13c1.67 0 3.03 1.36 3.03 3.03v32.33c0 1.66-1.36 3.02-3.02 3.03H3.02C1.36 38.4 0 37.03 0 35.37V3.03C0 1.36 1.36 0 3.03 0z"></path>
              <path d="M0 12.8h55.2v22.57c0 1.67-1.36 3.03-3.03 3.03H3.03C1.36 38.4 0 37.04 0 35.37V12.8z" fill="#d00"></path>
              <path d="M0 25.6h55.2v9.77c0 1.66-1.36 3.02-3.02 3.03H3.03A3.04 3.04 0 010 35.37V25.6z" fill="#ffce00"></path>
            </g>
          </svg>
        </div>
      </div>
    </div>

    <div class="hidden sm:flex items-center space-x-4 lg:space-x-8 text-sm font-extrabold">
      <a href="/#summary" data-target="summary" class="nav-link hover:text-gray-300 transition-colors duration-1000 px-2 py-1 min-h-[44px] flex items-center">SUMMARY</a>
      <a href="/#projects" data-target="projects" class="nav-link hover:text-gray-300 transition-colors duration-1000 px-2 py-1 min-h-[44px] flex items-center">PROJECTS</a>
      <div class="relative group h-full flex items-center">
        <div class="flex items-center h-full cursor-pointer hover:text-gray-300 space-x-2 px-2 py-1 min-h-[44px]">
          <span>LANGUAGE</span>
          <svg class="w-5 h-3 rounded overflow-hidden" style="filter: drop-shadow(0 0 1px rgba(255,255,255,0.2));" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 55.2 38.4">
            <g fill-rule="evenodd" clip-rule="evenodd">
              <path d="M3.03 0h49.13c1.67 0 3.03 1.36 3.03 3.03v32.33c0 1.66-1.36 3.02-3.02 3.03H3.02C1.36 38.4 0 37.03 0 35.37V3.03C0 1.36 1.36 0 3.03 0z"></path>
              <path d="M0 12.8h55.2v22.57c0 1.67-1.36 3.03-3.03 3.03H3.03C1.36 38.4 0 37.04 0 35.37V12.8z" fill="#d00"></path>
              <path d="M0 25.6h55.2v9.77c0 1.66-1.36 3.02-3.02 3.03H3.03A3.04 3.04 0 010 35.37V25.6z" fill="#ffce00"></path>
            </g>
          </svg>
          <svg class="w-5 h-3 rounded overflow-hidden" style="filter: drop-shadow(0 0 1px rgba(255,255,255,0.2));" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 55.2 38.4">
            <g>
              <path class="st0" d="M2.87,38.4h49.46c1.59-0.09,2.87-1.42,2.87-3.03V3.03c0-1.66-1.35-3.02-3.01-3.03H3.01C1.35,0.01,0,1.37,0,3.03v32.33C0,36.98,1.28,38.31,2.87,38.4z" fill="#FEFEFE"></path>
              <polygon class="st1" points="23.74,23.03 23.74,38.4 31.42,38.4 31.42,23.03 55.2,23.03 55.2,15.35 31.42,15.35 31.42,0 23.74,0 23.74,15.35 0,15.35 0,23.03 23.74,23.03" fill="#C8102E"></polygon>
              <path class="st2" d="M33.98,12.43V0h18.23c1.26,0.02,2.34,0.81,2.78,1.92L33.98,12.43L33.98,12.43z" fill="#012169"></path>
              <path class="st2" d="M33.98,25.97V38.4h18.35c1.21-0.07,2.23-0.85,2.66-1.92L33.98,25.97L33.98,25.97z" fill="#012169"></path>
              <path class="st2" d="M21.18,25.97V38.4H2.87c-1.21-0.07-2.24-0.85-2.66-1.94L21.18,25.97L21.18,25.97z" fill="#012169"></path>
              <path class="st2" d="M21.18,12.43V0H2.99C1.73,0.02,0.64,0.82,0.21,1.94L21.18,12.43L21.18,12.43z" fill="#012169"></path>
              <polygon class="st2" points="0,12.8 7.65,12.8 0,8.97 0,12.8" fill="#012169"></polygon>
              <polygon class="st2" points="55.2,12.8 47.51,12.8 55.2,8.95 55.2,12.8" fill="#012169"></polygon>
              <polygon class="st2" points="55.2,25.6 47.51,25.6 55.2,29.45 55.2,25.6" fill="#012169"></polygon>
              <polygon class="st2" points="0,25.6 7.65,25.6 0,29.43 0,25.6" fill="#012169"></polygon>
            </g>
          </svg>
          <svg class="w-4 h-4 text-white group-hover:text-gray-300 transition-colors" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24" stroke-linecap="round" stroke-linejoin="round">
            <path d="M19 9l-7 7-7-7"></path>
          </svg>
        </div>
      </div>
    </div>
  </div>
</nav>

<script>
  document.addEventListener("astro:page-load", function () {
    const activeClasses = "text-blue-500 underline decoration-blue-500 decoration-2 underline-offset-4 transition-colors duration-1000";
    const defaultClasses = "hover:text-gray-300 transition-colors duration-1000";
    const navLinks = document.querySelectorAll(".nav-link");

    function scrollToTarget(targetEl, offset) {
      const targetY = targetEl.getBoundingClientRect().top + window.scrollY - offset;
      window.scrollTo({ top: targetY, behavior: "smooth" });
    }
    const scrollOffset = 120;

    navLinks.forEach((link) => {
      link.addEventListener("click", function (e) {
        const targetId = this.getAttribute("data-target");
        const targetEl = document.getElementById(targetId);
        if (targetEl) {
          e.preventDefault();
          scrollToTarget(targetEl, scrollOffset);
        }
      });
    });

    const sectionVisibility = {};
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          sectionVisibility[entry.target.id] = entry.intersectionRatio;
        });
        let mostVisibleSection = null;
        let maxRatio = 0;
        for (const id in sectionVisibility) {
          if (sectionVisibility[id] > maxRatio) {
            maxRatio = sectionVisibility[id];
            mostVisibleSection = id;
          }
        }
        navLinks.forEach((link) => {
          if (link.getAttribute("data-target") === mostVisibleSection) {
            link.className = "nav-link " + activeClasses;
          } else {
            link.className = "nav-link " + defaultClasses;
          }
        });
      },
      { threshold: Array.from({ length: 101 }, (_, i) => i / 100) }
    );

    navLinks.forEach((link) => {
      const target = document.getElementById(link.getAttribute("data-target"));
      if (target) observer.observe(target);
    });

    if (window.location.hash) {
      const targetId = window.location.hash.substring(1);
      const targetEl = document.getElementById(targetId);
      if (targetEl) {
        setTimeout(() => {
          scrollToTarget(targetEl, scrollOffset);
        }, 0);
      }
    }

    const logoBreadcrumb = document.getElementById("logoBreadcrumb");
    if (logoBreadcrumb) {
      logoBreadcrumb.innerHTML = "";
      const homeLink = document.createElement("a");
      homeLink.href = "/";
      homeLink.className = "hover:text-blue-500 transition-colors duration-500";

      const isMobile = window.innerWidth < 640;
      homeLink.textContent = "ABRAMS";
      logoBreadcrumb.appendChild(homeLink);

      const pathSegments = window.location.pathname.split("/").filter(Boolean).filter(segment => segment !== "project");
      function transformSegment(seg) {
        const upperSeg = seg.toUpperCase();
        return isMobile && upperSeg.length > 8 ? upperSeg.substring(0, 8) + "..." : upperSeg;
      }

      if (pathSegments.length > 0) {
        pathSegments.forEach((segment) => {
          const arrow = document.createElement("span");
          arrow.className = isMobile ? "mx-0.5 xs:mx-1 inline-block" : "mx-4 inline-block";
          arrow.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3 sm:h-4 sm:w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
            <path stroke-linecap="round" stroke-linejoin="round" d="M9 5l7 7-7 7" />
          </svg>`;
          const segSpan = document.createElement("span");
          segSpan.textContent = transformSegment(segment);
          logoBreadcrumb.appendChild(arrow);
          logoBreadcrumb.appendChild(segSpan);
        });
      }
    }
  });
</script>
